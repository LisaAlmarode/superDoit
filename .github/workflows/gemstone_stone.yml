# test .stone and .topaz scripts using $GEMSTONE and command line args to run scripts
name: gemstone_stone CI

on: 
  push:
  pull_request:
    branches:
      - v2
      - v1
  schedule:
    - cron: "15 2 22 * *" #run job on the 22nd day of every month on the 15th minute of the 2nd hour
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        # os: [ ubuntu-18.04, macos-10.15 ]
        # gsvers: [ 3.6.1, 3.6.0, 3.5.7, 3.5.0 ]
        os: [ macos-10.15 ]
        gsvers: [ 3.6.1 ]
    runs-on: ${{ matrix.os }}
    env:
      GS_VERS: ${{ matrix.gsvers }}
      PLATFORM: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - id: setup-superDoit
        uses: dalehenrich/setup-superDoit@v2.0.1
        with:
          gemstone-version: ${{ matrix.gsvers }}
          superDoit-source: ${{ github.workspace }}
      - name: validate_using_local_checkout_for_setup
        run: |
          export GEMSTONE=${{steps.setup-superDoit.outputs.gemstone-product-path}}
          echo GEMSTONE=$GEMSTONE

          ls -l ${GITHUB_WORKSPACE}/gemstone/solo
          ls -l ${GITHUB_WORKSPACE}/gemstone/products
          
          . ${GITHUB_WORKSPACE}/dev/defPath.env
          canUSeeMe.solo -h
          canUSeeMe.solo
      # download the shunit-tests and create stones
      - name: setup stones for tests
        run: |
          # set -x
          # /opt/gemstone is expected to exist
          sudo mkdir /opt/gemstone
          sudo chmod oug+rwx /opt/gemstone
          sudo mkdir /opt/gemstone/locks
          sudo chmod oug+rwx /opt/gemstone/locks

          export GEMSTONE_STONE_NAME=gs_$GS_VERS
          export GEMSTONE=${{steps.setup-superDoit.outputs.gemstone-product-path}}
          echo $GEMSTONE

          export GEMSTONE_STONE_DIR=${GITHUB_WORKSPACE}/gemstone/stones/gs_$GS_VERS
          . ${GITHUB_WORKSPACE}/dev/defPath.env
          createSuperDoitStone.solo -D --GEMSTONE=$GEMSTONE --stoneDirectory=$GEMSTONE_STONE_DIR --stoneName=gs_$GS_VERS

          $GEMSTONE/bin/startstone -l $GEMSTONE_STONE_DIR/logs/${GEMSTONE_STONE_NAME}.log -z $GEMSTONE_STONE_DIR/system.conf $GEMSTONE_STONE_NAME

          # Required for tests
          echo "GEMSTONE=$GEMSTONE"  >> $GITHUB_ENV
          echo "GEMSTONE_STONE_DIR=$GEMSTONE_STONE_DIR"  >> $GITHUB_ENV
          echo "GEMSTONE_TOPAZINI_PATH=$GEMSTONE_STONE_DIR/.topazini" >> $GITHUB_ENV
          echo "GITHUB_WORKSPACE=$GITHUB_WORKSPACE" >> $GITHUB_ENV

          # useful for debugging
          echo "GEMSTONE_STONE_NAME=$GEMSTONE_STONE_NAME" >> $GITHUB_ENV
          echo "GEMSTONE_STONE_LOG=$GEMSTONE_STONE_DIR/logs/${GEMSTONE_STONE_NAME}.log" >> $GITHUB_ENV
          echo "GEMSTONE_STONE_SYSTEMCONF=$GEMSTONE_STONE_DIR/system.conf" >> $GITHUB_ENV
      - name: validate_stone_startup
        run: |
          export GEMSTONE=${{env.GEMSTONE}}
          export GEMSTONE_TOPAZINI_PATH=${{env.GEMSTONE_TOPAZINI_PATH}}
          PATH=$GEMSTONE/bin::$PATH

          gslist -lc

          . ${GITHUB_WORKSPACE}/dev/defPath.env
          canUSeeMe.stone -- -h -l -I $GEMSTONE_TOPAZINI_PATH
          canUSeeMe.stone -- -l -I $GEMSTONE_TOPAZINI_PATH
      - name: test
        run: |
          curl -L "https://github.com/kward/shunit2/archive/refs/tags/v2.1.8.tar.gz" | tar zx -C ${GITHUB_WORKSPACE}/shunit_tests

          export GITHUB_WORKSPACE=${{env.GITHUB_WORKSPACE}}
          export GEMSTONE=${{env.GEMSTONE}}
          export GEMSTONE_STONE_DIR=${{env.GEMSTONE_STONE_DIR}}
          export GEMSTONE_TOPAZINI_PATH=${{env.GEMSTONE_TOPAZINI_PATH}}
          PATH=$GEMSTONE/bin::$PATH

          shunit_tests/testExamples.stone
#  slack-workflow-status:
#    if: always()
#    name: Post Workflow Status To Slack
#    needs:
#      - build
#    runs-on: ubuntu-18.04
#    steps:
#       - name: Slack Workflow Notification
#         uses: Gamesight/slack-workflow-status@master
#         with:
#          repo_token: ${{secrets.GITHUB_TOKEN}}
#          slack_webhook_url: ${{secrets.SLACK_DALEHENRICH}}
#          name: 'action run' 
