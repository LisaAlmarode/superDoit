# test .stone and .topaz scripts using $GEMSTONE and command line args to run scripts
name: gemstone_stone CI

on: 
  push:
  pull_request:
    branches:
      - masterV1.0
  schedule:
    - cron: "15 2 22 * *" #run job on the 22nd day of every month on the 15th minute of the 2nd hour


jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-18.04 ]
        gsvers: [ 3.6.1 ]
    runs-on: ${{ matrix.os }}
    env:
      GS_VERS: ${{ matrix.gsvers }}
      PLATFORM: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - id: setup-superDoit
        uses: dalehenrich/setup-superDoit@v2
        with:
          gemstone-version: ${{ matrix.gsvers }}
          superDoit-source: ${{ github.workspace }}
      # download product 3.6.1 product tree for solo scripts if gemstone version is not 3.6.- or 3.6.1
      - name: download_gemstone_for_solo
        if: ${{ ( ( matrix.gsvers != '3.6.0') && (matrix.gsvers != '3.6.1') ) }}
        run: |
          echo `pwd`
          echo ${{ matrix.gsvers }}
          echo ${{ steps.setup-superDoit.outputs.gemstone-product-directory }}
          cd ${{ steps.setup-superDoit.outputs.gemstone-product-directory }}
          downloadGemStone.sh 3.6.1
          ln -s ${{steps.setup-superDoit.outputs.gemstone-product-directory}}/${{ steps.setup-superDoit.outputs.gemstone-product-name }} ../solo/product
      # download product tree for mac
      - name: download_gemstone_for_mac
        if: ${{ matrix.os == 'macos-10.15' }}
        run: |
          cd ${{ steps.setup-superDoit.outputs.gemstone-product-directory }}
          downloadGemStone.sh ${{ matrix.gsvers }}
     # create symbolic link for mac solo scripts to product tree for 3.6.0 and 3.6.1
      - name: create_solo_symbolic_link_for_mac
        if: ${{ (matrix.os == 'macos-10.15') && ( ( matrix.gsvers =='3.6.0') || ( matrix.gsvers == '3.6.1') ) }}
        run: |
          cd ${{ steps.setup-superDoit.outputs.gemstone-product-directory }}
          ln -s ${{steps.setup-superDoit.outputs.gemstone-product-directory}}/${{ steps.setup-superDoit.outputs.gemstone-product-name }} ../solo/product
      # expect gemstone/solo to be populated
      - name: validate_using_local_checkout_for_setup
        run: |
          canUSeeMe.solo -h
          canUSeeMe.solo
      # download the shunit-tests and create stones
      - name: setup stones for tests
        run: |
          # set -x
          curl -L "https://github.com/kward/shunit2/archive/refs/tags/v2.1.8.tar.gz" | tar zx -C ${GITHUB_WORKSPACE}/shunit_tests
          if [ "$PLATFORM" = "macos-10.15" ] ; then
            export GEMSTONE="${GITHUB_WORKSPACE}/gemstone/products/GemStone64Bit${GS_VERS}-i386.Darwin"
          else
            export GEMSTONE="${GITHUB_WORKSPACE}/gemstone/products/GemStone64Bit${GS_VERS}-x86_64.Linux"
          fi
          #
          # this where I want to call the createStone superDoit script
          #
          unset GS_HOME # $GEMSTONE must be set

          export GEMSTONE_STONE_DIR=${GITHUB_WORKSPACE}/gemstone/stones/gs_$GS_VERS
          export GEMSTONE_TOPAZINI_PATH=$GEMSTONE_STONE_DIR/.topazini
          createSuperDoitStone.solo -D --stoneDirectory=$GEMSTONE_STONE_DIR --stoneName=gs_$GS_VERS
          sudo mkdir /opt/gemstone
          sudo chmod oug+rwx /opt/gemstone
          ls -l /opt
          sudo mkdir /opt/gemstone/locks
          sudo chmod oug+rwx /opt/gemstone/locks
          ls -l /opt
          ls -l /opt/gemstone /opt/gemstone/locks
          $GEMSTONE/bin/startstone gs_$GS_VERS
          . ${GITHUB_WORKSPACE}/dev/defPath.env
      - name: test
        run: |
          shunit_tests/testExamples.stone
  slack-workflow-status:
    if: always()
    name: Post Workflow Status To Slack
    needs:
      - build
    runs-on: ubuntu-18.04
    steps:
       - name: Slack Workflow Notification
         uses: Gamesight/slack-workflow-status@master
         with:
          repo_token: ${{secrets.GITHUB_TOKEN}}
          slack_webhook_url: ${{secrets.SLACK_DALEHENRICH}}
          name: 'action run' 
