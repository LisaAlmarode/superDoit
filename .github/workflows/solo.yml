name: solo CI

on: 
  push:
  pull_request:
    branches:
      - v2
      - v1
  schedule:
    - cron: "15 2 20 * *" #run job on the 20th day of every month on the 15th minute of the 2nd hour
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        # os: [ ubuntu-18.04, macos-10.15 ]
        # gsvers: [ 3.6.0, 3.6.1 ]
        os: [ macos-10.15 ]
        gsvers: [ 3.6.1 ]
    runs-on: ${{ matrix.os }}
    env:
      GS_VERS: ${{ matrix.gsvers }}
      PLATFORM: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - id: setup-superDoit
        uses: dalehenrich/setup-superDoit@v2.0.1
        with:
          gemstone-version: ${{ matrix.gsvers }}
          superDoit-source: ${{ github.workspace }}
      - name: validate_using_local_checkout_for_setup
        run: |
          export GEMSTONE=${{steps.setup-superDoit.outputs.gemstone-product-path}}
          echo "GEMSTONE=$GEMSTONE"
          echo "GITHUB_WORKSPACE= ${GITHUB_WORKSPACE}"
          echo "superDoit-root=${{steps.setup-superDoit.outputs.superDoit-root}}"

          ls -l ${GITHUB_WORKSPACE}/gemstone/solo
          ls -l ${GITHUB_WORKSPACE}/gemstone/products
          
          . ${{ steps.setup-superDoit.outputs.superDoit-root }}/dev/defPath.env

          canUSeeMe.solo -h
          canUSeeMe.solo
      # download download shuunit_tests and run tests
      - name: setup
        run: |
          # set -x
          echo "download shunit_tests"
          curl -L "https://github.com/kward/shunit2/archive/refs/tags/v2.1.8.tar.gz" | tar zx -C ${GITHUB_WORKSPACE}/shunit_tests
          . ${GITHUB_WORKSPACE}/dev/defPath.env
          simple.solo -h
          simple.solo
      - name: test
        run: |
          export GEMSTONE=${{steps.setup-superDoit.outputs.gemstone-product-path}}
          echo GEMSTONE=$GEMSTONE
          shunit_tests/testExamples.solo
          shunit_tests/testScriptBin.solo
          shunit_tests/testSuite.solo
#  slack-workflow-status:
#    if: always()
#    name: Post Workflow Status To Slack
#    needs:
#      - build
#    runs-on: ubuntu-18.04
#    steps:
#       - name: Slack Workflow Notification
#         uses: Gamesight/slack-workflow-status@master
#         with:
#          repo_token: ${{secrets.GITHUB_TOKEN}}
#          slack_webhook_url: ${{secrets.SLACK_DALEHENRICH}}
#          name: 'action run' 
