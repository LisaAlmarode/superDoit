#! /usr/bin/env bash
#
#	Expected script command line:
#		script [ <script-args> ] [ -- [ <stone-name> [ <topaz-command-line-args> ] ] ]
#
#	Not worried about duplicate topaz options at this point ... let the cards fall where they may
#
# set -x 

export superdoitDir="`dirname $0`/.."
gemstoneDir="$superdoitDir/gemstone"

if [ "$GS_HOME"x = "x" ] ; then
	echo "The env var \$GS_HOME is expected to be defined when running GsDevKit_home scripts"
	exit 1
fi

# process command line args
#		collect scriptFile, then scan for scriptArgs, if -- encountered, 

scriptFile=$1
shift

defaultTopazArgs="-L"	# if no topaz args specified, then default to -L 
for arg in "$@"; do
		if [ "$arg" = "--" ] ; then
			endOfScriptArgs="true"
		else
			if [ "$endOfScriptArgs"x = "x" ] ; then
				scriptArgs="$scriptArgs $arg"
			else
				if [ "$stoneName"x = "x" ] ; then
					stoneName=$arg
				else
					topazArgs="$topazArgs $arg"
					defaultTopazArgs=""
				fi
			fi
		fi
		shift
done

if [ "$stoneName"x = "x" ] ; then
	# expect current directory to be a stone directory
	currentDir=`pwd`
	stoneName="`basename $currentDir`"
	export stoneDir=$GS_HOME/server/stones/$stoneName
	if [ ! -d "$stoneDir" ] ; then
		echo "No stone name specified on the command line AND the current directory"
		echo "$stoneDir is NOT a \$GS_HOME stone directory."
		echo ""
		echo "Specify the stoneName as the first argument on command line OR run the script"
		echo "in a proper \$GS_HOME stone directory"
		exit 1
	fi
else
	export stoneDir=$GS_HOME/server/stones/$stoneName
	if [ ! -d "$stoneDir" ] ; then
		echo "The stone name $stoneName (first positional argument)."
		echo "$stoneDir is NOT a \$GS_HOME/server/stones stone directory."
		echo ""
		echo "Specify the stoneName as the first argument on command line OR run the script"
		echo "in a proper \$GS_HOME stone directory"
		exit 1
	fi
fi

if [ "skip"x = "x" ] ; then
	echo "script file: $scriptFile"
	echo "stone name: $stoneName"
	echo "topaz args: $topazArgs"
	echo "script args: $scriptArgs"
	echo "======================"
	exit 0
fi

# set up GsDevKit_home stone environment
pushd "$stoneDir" >& /dev/null
  source "$stoneDir/stone.env"
popd >& /dev/null

if [ "$GEMSTONE"x = "x" ] ; then
	export GEMSTONE="$stoneDir/product"
fi

if [ "$ROWAN_PROJECTS_HOME"x = "x" ] ; then
	export ROWAN_PROJECTS_HOME="$GS_HOME/shared/repos"
fi

$GEMSTONE/bin/topaz $defaultTopazArgs $topazArgs \
	-I "$stoneDir/.topazini" \
	-q \
	-S $gemstoneDir/superdoit.tpz -- $scriptFile $criptArgs
