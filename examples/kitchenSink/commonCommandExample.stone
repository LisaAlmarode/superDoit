#!/usr/bin/env superdoit_stone
#
#	Example script with the commonly used superdoit commands
#
options
{
	SuperDoitOptionalOptionWithNoArg long: 'noArg'.
	SuperDoitOptionalOptionWithNoArg long: 'noArg' short: 'n'.

	SuperDoitOptionalOptionWithRequiredArg long: 'optional'.
	SuperDoitOptionalOptionWithRequiredArg long: 'optional' default: 'default'.
	SuperDoitOptionalOptionWithRequiredArg long: 'optional' short: 'o'.
	SuperDoitOptionalOptionWithRequiredArg long: 'optional' short: 'o' default: 'default'.

	SuperDoitRequiredOptionWithRequiredArg long: 'required'.
	SuperDoitRequiredOptionWithRequiredArg long: 'required' short: 'r'.
}
%
usage
-----
USAGE 
  # with GS_HOME set (<stone-name> optional if run in $GS_HOME/servers/stones/<stone-name> directory)
  $basename [--help | -h] [--debug | -D] [-- [<stone-name> [<topaz-command-line-args>] ] ]
  # with GEMSTONE set
  $basename [--help | -h] [--debug | -D] -- ([-r] | -l | -L) -I <path-to-.topazini> [<topaz-command-line-args>]

DESCRIPTION
  Example script demonstrating the most common commands:
    options
    usage
    instvars
    method
    doit

OPTIONS
  <stone-name>               Name of the GsDevKit_home stone. <stone-name> argument
                             may be skipped if the script is run in a GsDevKit_home
                             stone directory (i.e., $GS_HOME/server/stones/<stone-name>
  <topaz-command-line-args>  topaz options that should be passed to topaz when running
                             running the script
  -h, --help                 display usage message
  -D, --debug                bring up topaz debugger in the event of a script error
  --noArg | -n               option with no argument
  --optional | -o            optional option with required argument

EXAMPLES
  $basename --help                                   -- gs_351             # with GS_HOME set
  $basename -h                                       -- -l -I ./.topazini  # with GEMSTONE set
  $basename --help                                   <topaz-arguments>
  $basename -D --required=arg                        <topaz-arguments>
  $basename --required=arg                           <topaz-arguments>
  $basename --required=arg --noArg                   <topaz-arguments>
  $basename --required=arg --optional="non default"  <topaz-arguments>
  $basename --required=arg -o non-default            <topaz-arguments>
  $basename --required=arg -n -o non-default         <topaz-arguments>
-----
%
INSTVARS
instvar
%
METHOD
foo
	^ instvar
%
doit
| doPersist doExport |
doPersist := doExport := false.
doPersist ifTrue: [ 
	self persist
].
doExport ifTrue: [ 
	self class export.
	^ self noResult
].
	self stdout nextPutAll: '--required present with value ', self required printString; lf.
	self noArg
		ifTrue: [
			self stdout nextPutAll: '--noArg present'; lf ].
	self optional 
		ifNotNil: [:optionalValue |
			self stdout nextPutAll: '--optional present with value ', optionalValue printString; lf ].
	instvar := self required.
	^ self foo
%
