#!/usr/bin/env superdoit_stone
#
options
{
  SuperDoitOptionalOptionWithNoArg long: 'commit'.
}
%
usage
-----
USAGE $basename [--help | -h] [--debug | -D] [-- [<stone-name> [<topaz-command-line-args>] ] ]

DESCRIPTION
  Test the examples/utility/install_rowan_project.stone script.

OPTIONS
      --commit               If present do a commit after the project is installed
                             and run tests returning test result summary.
  <stone-name>               Name of the GsDevKit_home stone. <stone-name> argument
                             may be skipped if the script is run in a GsDevKit_home
                             stone directory (i.e., $GS_HOME/server/stones/<stone-name>
  <topaz-command-line-args>  topaz options that should be passed to topaz when running
                             running the script
  -h, --help                 display usage message
  -D, --debug                bring up topaz debugger in the event of a script error

EXAMPLES
  $basename -h
  $basename -D
  $basename --commit
  $basename
-----
%
doit
	| projectName installCommand commitArg args testResult |
	projectName := 'RowanSample9'.
	('$SUPERDOIT_STONE_DIR/git/', projectName) asFileReference ensureDeleteAll. "force clone"
	installCommand := '$SUPERDOIT_DIR'  asFileReference / 'examples/utility/install_rowan_project.stone'.
	commitArg := self commit ifTrue: [ '' ] ifFalse: ['--noCommit'].
	args := commitArg, ' --projectsHome=$GS_HOME/server/stones/', self executionStoneName, '/git ',
			'file:$SUPERDOIT_DIR/tests/specs/RowanSample9_spec_0001.ston'.
	GsHostProcess execute: installCommand pathString, ' ', args, ' -- ', self executionStoneName.
	('$SUPERDOIT_STONE_DIR/git/', projectName) asFileReference ensureDeleteAll. "clean up after load"
	self commit 
		ifTrue: [
			"run tests to validate that the project was indeed loaded"
			System abort.
			testResult := ((self globalNamed: 'Rowan' ifAbsent: []) projectNamed: projectName) testSuite run.
			^ testResult printString ].
	^ true
%
